1. Napisz funkcjê, która przyjmie dwa argumenty, jako parametry. Przyk³adowy nag³ówek funkcji:

function printZipCodes( startCode, stopCode );

Funkcja przyjmuje dwa stringi w postaci "00-000". 
Nale¿y zbadaæ, czy pierwszy numer kodu jest mniejszy
 od przekazanego parametru, a nastêpnie wydrukowaæ na 
 stronie (za pomoc¹ listy <ul>) wszystkie kody z zakresu pomiêdzy argumentami.
 
 
 
 2. Napisz funkcjê, która wypisze oraz zliczy iloœæ takich godzin z przedzia³u, które zawieraj¹ tylko nie wiêcej ni¿ 2 ró¿ne cyfry.
 Funkcja przyjmuje przedzia³ czasowy w postaci dwóch stringów np. function getTimeByNumbers("21:59:34", "22:00:00");
 Zak³adamy, ¿e argument pierwszy zawsze jest wczeœniejszym czasem ni¿ argument drugi, oraz oba argumenty posiadaj¹ czas z jednego dnia 
 (brak przeskoczeñ pó³ncy np. 23:55:00 i 02:03:00 - taki czas nie bêdzie poprawnym argumentem) oraz, ¿e czas zawsze jest w formacie HH:mm:ss.

Czas, który powinien byæ uwzglêdniany to np.
22:22:22 (zawiera tylko jedn¹ unikaln¹ cyfrê - 2)
22:22:23 (zawiera dwie unikalne cyfry, a wiêc spe³nia warunek)

ale np. 
21:59:34 ju¿ nie bêdzie policzony, gdy¿ zawiera 6 ró¿nych cyfr w swojej godzinie.
22:22:34 (zawiera 3 unikalne cyfry)

3. Napisz program symuluj¹cy proste dzia³anie banku. 
Program powinien pozwoliæ na obs³ugê konta w banku, zalogowanie sie (za pomoc¹ nr pesel, bez has³a), 
wp³atê oraz wyp³atê okreœlonej sumy. Je¿eli dany klient nie posiada wystarczaj¹cej iloœci pieniêdzy, 
powinien dostaæ stosowny komunikat. Klienci, kwoty, pesele powinny byæ ustalone odgórnie jako obiekty. 
Wykorzystaj bootstrapa i jQuery do realizacji zadania. Strona nie powinna siê prze³adowywaæ - 
powinny byæ ukrywane i pokazywane odpowiednie bloki w zale¿noœci, czy u¿ytkownik jest poprawnie zalogowany, czy nie.

